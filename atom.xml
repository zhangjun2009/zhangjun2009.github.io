<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我就是我,不一样的自我.</title>
  
  <subtitle>一个搬不动代码的程序员</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangjun2009.github.io/"/>
  <updated>2019-06-10T13:47:26.106Z</updated>
  <id>https://zhangjun2009.github.io/</id>
  
  <author>
    <name>张 军</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://zhangjun2009.github.io/2019/06/10/%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91/"/>
    <id>https://zhangjun2009.github.io/2019/06/10/二叉查找树/</id>
    <published>2019-06-10T13:47:26.106Z</published>
    <updated>2019-06-10T13:47:26.106Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>队列</title>
    <link href="https://zhangjun2009.github.io/2019/06/09/%E9%98%9F%E5%88%97/"/>
    <id>https://zhangjun2009.github.io/2019/06/09/队列/</id>
    <published>2019-06-09T14:56:44.160Z</published>
    <updated>2019-06-09T15:17:00.326Z</updated>
    
    <content type="html"><![CDATA[<p>&ensp;&ensp;&ensp;&ensp;队列是一种线性存储结构,他是按照FIFO(first in first out)先进先出的方式来进出队列的,并且规定队列只能在队首进行删除操作,在队尾进行添加操作,分别称为”出队”和”入队”.<br><img src="/2019/06/09/队列/1.png" alt="enter description here"></p><p><a href="https://github.com/zhangjun2009/ymm/blob/master/src/main/java/com/zhangj/ymm/data_struct/ArrayQueue.java" target="_blank" rel="noopener">队列的java实现</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;队列是一种线性存储结构,他是按照FIFO(first in first out)先进先出的方式来进出队列的,并且规定队列只能在队首进行删除操作,在队尾进行添加操作,分别称为”出队”和”入队”.&lt;br&gt;&lt;img src=&quot;/20
      
    
    </summary>
    
      <category term="数据结构" scheme="https://zhangjun2009.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="队列" scheme="https://zhangjun2009.github.io/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>栈</title>
    <link href="https://zhangjun2009.github.io/2019/06/09/%E6%A0%88/"/>
    <id>https://zhangjun2009.github.io/2019/06/09/栈/</id>
    <published>2019-06-09T14:19:29.948Z</published>
    <updated>2019-06-09T14:54:16.060Z</updated>
    
    <content type="html"><![CDATA[<p>&ensp;&ensp;&ensp;&ensp;栈是一种线性存储结构,按照后进先出(LIFO,last in first out)方式出入栈,栈的添加,删除操作只能在栈顶进行.<br>栈通常有三种操作:</p><ol><li>push-&gt;栈顶添加元素</li><li>peek-&gt;返回栈顶元素,不删除</li><li>pop-&gt;返回并删除栈顶元素<br><img src="/2019/06/09/栈/1.png" alt="enter description here"></li></ol><p><a href="https://github.com/zhangjun2009/ymm/blob/master/src/main/java/com/zhangj/ymm/data_struct/ArrayStack.java" target="_blank" rel="noopener">栈的java实现代码</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;栈是一种线性存储结构,按照后进先出(LIFO,last in first out)方式出入栈,栈的添加,删除操作只能在栈顶进行.&lt;br&gt;栈通常有三种操作:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;push-&amp;gt;栈顶添加元素&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="数据结构" scheme="https://zhangjun2009.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="栈" scheme="https://zhangjun2009.github.io/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>线性数据结构</title>
    <link href="https://zhangjun2009.github.io/2019/06/09/%E6%95%B0%E7%BB%841/"/>
    <id>https://zhangjun2009.github.io/2019/06/09/数组1/</id>
    <published>2019-06-09T01:30:21.398Z</published>
    <updated>2019-06-09T03:57:25.580Z</updated>
    
    <content type="html"><![CDATA[<p>&ensp;&ensp;&ensp;&ensp;数组属于线性表,它是具有相同类型的N个数据元素的有序组成,数组有上下界的,且上下界内的元素是连续的.<br><strong><em>数组的特点:数组里的元素是连续的,随机访问速度快.</em></strong><br><img src="/2019/06/09/数组1/1.png" alt="enterdescription here"> </p><p>&ensp;&ensp;&ensp;&ensp;双向链表也是由节点组成,每个节点包含该节点的值,直接前驱节点,直接后继节点,<br>单向链表,由节点组成,每个节点包括节点的值和指向下一节点的指针.<br><strong><em>单链表的特点:随机访问速度较慢,但是新增/删除的效率很高.</em></strong><br><img src="/2019/06/09/数组1/2.png" alt="enter description here"><br><img src="/2019/06/09/数组1/3.png" alt="enter description here"><br><img src="/2019/06/09/数组1/4.png" alt="enter description here"></p><p>&ensp;&ensp;&ensp;&ensp;双向链表也是由节点组成,每个节点包含该节点的值,直接前驱节点,直接后继节点,<br><img src="/2019/06/09/数组1/5.png" alt="enter description here"><br><img src="/2019/06/09/数组1/6.png" alt="enter description here"><br><img src="/2019/06/09/数组1/7.png" alt="enter description here"><br><a href="https://github.com/zhangjun2009/ymm/blob/master/src/main/java/com/zhangj/ymm/data_struct/DoubleLink.java" target="_blank" rel="noopener">双链表的java实现github地址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;数组属于线性表,它是具有相同类型的N个数据元素的有序组成,数组有上下界的,且上下界内的元素是连续的.&lt;br&gt;&lt;strong&gt;&lt;em&gt;数组的特点:数组里的元素是连续的,随机访问速度快.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;img
      
    
    </summary>
    
      <category term="数据结构" scheme="https://zhangjun2009.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://zhangjun2009.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础知识</title>
    <link href="https://zhangjun2009.github.io/2019/06/04/linux1/"/>
    <id>https://zhangjun2009.github.io/2019/06/04/linux1/</id>
    <published>2019-06-04T14:58:09.334Z</published>
    <updated>2019-06-04T15:53:21.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="linux下”-“和”-”的区别"><a href="#linux下”-“和”-”的区别" class="headerlink" title=" linux下”/“和”~”的区别"></a> <strong>linux下”/“和”~”的区别</strong></h2><blockquote><p> “/“是linux的根目录,”~”是linux的家目录.我们知道linux是个文件系统,一切皆文件,存储是以挂载的方式,硬盘是挂在文件上的,每个文件都有层级关系,就像一颗树一样,而”/“就是树的头.linux种每个用户都有”家目录”,如果我们新增用户test,则test用户的家目录就是/home/test,新增用户系统会自动帮我们创建好这个目录,特别提示,<strong><em>root用户的家目录是/root</em></strong></p></blockquote><h2 id="init-命令的使用"><a href="#init-命令的使用" class="headerlink" title="init 命令的使用"></a><strong>init 命令的使用</strong></h2><blockquote><p> <code>init 0</code>: <code>关机,停止所有进程</code><br>   <code>init 6</code>: <code>重启机器</code> </p></blockquote><h2 id="linux特殊符号"><a href="#linux特殊符号" class="headerlink" title="linux特殊符号"></a><strong>linux特殊符号</strong></h2><blockquote><ul><li><p><em>管道符号: “|”</em><br> 把前一个命令的输出结果给后一个命令执行,more/head/cat/grep/wc……等命令支持放在管道符号后面.<br>cat /etc/passwd | grep ‘root’ -&gt; 过滤出/etc/passwd中含有’root’的行</p></li><li><p><em>追加符号:”&gt;&gt;”</em><br> 把之前一个命令输出的结果追加到某个文件<br>head -3 /etc/passwd &gt;&gt; /tmp/test.md -&gt; 把/etc/passwd文件前3行追加到/tem/test.md文件结尾</p></li><li><p><em>覆盖符号:”&gt;”</em><br>把之前一个命令的输出结果覆盖到某个文件<br>head -3 /etc/passwd &gt; /tmp/test.md -&gt;用/etc/passwd文件前3行覆盖/tem/test.md文件内容</p></li><li><p>*连接符号:”; “<br>执行多个命令,并放在一行执行,命令之间用”; “隔开<br>mkdir /tmp/music ; mv /tmp/music /usr/local -&gt;创建文件music之后移动到/usr/local目录下</p></li><li><p><em>后台执行:”&amp;”</em><br>当要把命令放在后台执行时，在命令的后面加上“&amp;”</p></li><li><p><em>`command` 倒引号</em><br>倒引号里的命令要提前执行,执行的结果带入的后面的执行命令中</p></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;linux下”-“和”-”的区别&quot;&gt;&lt;a href=&quot;#linux下”-“和”-”的区别&quot; class=&quot;headerlink&quot; title=&quot; linux下”/“和”~”的区别&quot;&gt;&lt;/a&gt; &lt;strong&gt;linux下”/“和”~”的区别&lt;/strong&gt;&lt;/h
      
    
    </summary>
    
      <category term="linux" scheme="https://zhangjun2009.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://zhangjun2009.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zhangjun2009.github.io/2019/06/01/hello-world/"/>
    <id>https://zhangjun2009.github.io/2019/06/01/hello-world/</id>
    <published>2019-06-01T07:44:03.493Z</published>
    <updated>2019-06-01T10:16:51.224Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="test" scheme="https://zhangjun2009.github.io/categories/test/"/>
    
    
      <category term="test" scheme="https://zhangjun2009.github.io/tags/test/"/>
    
  </entry>
  
</feed>
